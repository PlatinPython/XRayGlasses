plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle' version '[6.0.18,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = "${minecraft_version}-${mod_version}"
group = 'platinpython.xrayglasses'
base.archivesName = 'X-Ray Glasses'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: '2023.09.03-1.20.1'

    runs {
        configureEach {
            workingDirectory project.file("run/${it.name}")

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                xrayglasses {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', 'xrayglasses'
        }

        server {
            property 'forge.enabledGameTestNamespaces', 'xrayglasses'
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', 'xrayglasses'
        }

        data {
            args '--mod', 'xrayglasses', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft "net.neoforged:forge:1.20.1-47.1.79"
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : 'xrayglasses',
                'Specification-Vendor'    : 'PlatinPython',
                'Specification-Version'   : '1',
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : "${version}",
                'Implementation-Vendor'   : 'PlatinPython',
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
